{"version":3,"sources":["slack.js"],"names":[],"mappings":";;;;IAce,iBAAiB,qBAAhC,WAAiC,MAAM,EAAE,MAAM,EAAE;AAC/C,MAAI;AACF,QAAI,IAAI,GAAG,EAAC,KAAK,EAAE,MAAM,CAAC,KAAK,CAAC,QAAQ,EAAC,CAAC;AAC1C,KAAC,CAAC,MAAM,CAAC,IAAI,EAAE,MAAM,CAAC,CAAC;AACvB,QAAI,QAAQ,GAAG,MAAM,OAAO,CAAC,OAAO,CAAC,IAAI,CAAC;AACxC,SAAG,EAAE,UAAU,GAAE,MAAM,CAAC,KAAK,CAAC,QAAQ,GAAG,OAAO,GAAG,MAAM;AACzD,UAAI,EAAE,IAAI,EACX,CAAC,CAAC;GACJ,CAAC,OAAO,CAAC,EAAE;AACV,UAAM,aAAa,CAAC,0BAA0B,EAAE,CAAC,CAAC,OAAO,CAAC,CAAC;GAC5D;;AAED,MAAI,IAAI,GAAG,QAAQ,CAAC,IAAI,CAAC;AACzB,MAAI;AACF,QAAI,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;GAC/B,CAAC,OAAO,CAAC,EAAE;AACV,UAAM,aAAa,CAAC,yBAAyB,EAAE,qBAAqB,GAAG,IAAI,CAAC,CAAC;GAC9E;;AAED,MAAI,MAAM,CAAC,EAAE,EAAE;AACb,WAAO,MAAM,CAAC;GACf,MAAM;AACL,UAAM,aAAa,CAAC,kBAAkB,GAAG,MAAM,CAAC,KAAK,EAAE,MAAM,CAAC,KAAK,CAAC,CAAC;GACtE;CAEF;;IAEc,4BAA4B,qBAA3C,WAA4C,KAAK,EAAE;AACjD,SAAO,iBAAiB,CAAC,oBAAoB,EAAE;AAC7C,SAAK,EAAE,KAAK;AACZ,cAAU,EAAE,IAAI;AAChB,YAAQ,EAAE,mDAAmD,EAC9D,CAAC,CAAC;CACJ;;IAEc,4BAA4B,qBAA3C,WAA4C,IAAI,EAAE;AAChD,MAAI,CAAC,GAAG,IAAI,SAAS,EAAE,CAAC;AACxB,GAAC,CAAC,UAAU,CAAC,MAAM,CAAC,KAAK,CAAC,UAAU,CAAC,CAAC;AACtC,MAAI,QAAQ,GAAG;AACb,WAAO,EAAE,SAAS;AAClB,YAAQ,EAAE,UAAU;AACpB,QAAI,EAAE,OAAO,GAAG,IAAI,CAAC,GAAG,EAAE;AAC1B,cAAU,EAAE,SAAS,EACtB,CAAC;AACF,MAAI,GAAG,CAAC,CAAC,MAAM,CAAC,QAAQ,EAAE,IAAI,CAAC,CAAC;AAChC,SAAO,CAAC,CAAC,OAAO,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;CAChC;;AA5DD,IAAI,CAAC,GAAG,OAAO,CAAC,aAAa,CAAC,CAAC;AAC/B,IAAI,YAAY,GAAG,OAAO,CAAC,cAAc,CAAC,CAAC;AAC3C,IAAI,OAAO,GAAG,OAAO,CAAC,SAAS,CAAC,CAAC;AACjC,IAAI,SAAS,GAAG,OAAO,CAAC,YAAY,CAAC,CAAC;;AAEtC,IAAI,MAAM,GAAG,OAAO,CAAC,UAAU,CAAC,CAAC;;AAEjC,SAAS,aAAa,CAAC,IAAI,EAAE,OAAO,EAAE;AACpC,MAAI,GAAG,GAAG,IAAI,KAAK,CAAC,wBAAwB,GAAG,OAAO,CAAC,CAAC;AACxD,KAAG,CAAC,IAAI,GAAG,IAAI,CAAC;AAChB,KAAG,CAAC,gBAAgB,GAAG,IAAI,CAAC;AAC5B,SAAO,GAAG,CAAC;CACZ;;AAgDA,CAAC;;AAGF,MAAM,CAAC,OAAO,GAAG;AACf,8BAA4B,EAA5B,4BAA4B;AAC5B,mBAAiB,EAAjB,iBAAiB;AACjB,8BAA4B,EAA5B,4BAA4B,EAC7B,CAAC","file":"slack.js","sourcesContent":["var _ = require('lodash-node');\nvar instapromise = require('instapromise');\nvar request = require('request');\nvar slackNode = require('slack-node');\n\nvar config = require('./config');\n\nfunction SlackApiError(code, message) {\n  var err = new Error(\"Slack API Call Error: \" + message);\n  err.code = code;\n  err._isSlackApiError = true;\n  return err;\n}\n\nasync function slackApiCallAsync(method, params) {\n  try {\n    var form = {token: config.slack.apiToken};\n    _.assign(form, params);\n    var response = await request.promise.post({\n      url: 'https://'+ config.slack.teamSite + '/api/' + method,\n      form: form,\n    });\n  } catch (e) {\n    throw SlackApiError('SLACK_API_REQUEST_FAILED', e.message);\n  }\n\n  var body = response.body;\n  try {\n    var result = JSON.parse(body);\n  } catch (e) {\n    throw SlackApiError('SLACK_BAD_JSON_RESPONSE', \"Bad JSON response: \" + body);\n  }\n\n  if (result.ok) {\n    return result;\n  } else {\n    throw SlackApiError('SLACK_API_ERROR_' + result.error, result.error);\n  }\n\n}\n\nasync function sendSlackInstanceInviteAsync(email) {\n  return slackApiCallAsync('users.admin.invite', {\n    email: email,\n    set_active: true,\n    channels: 'C04Q3JTSV,C04QDAQNR,C04UAR1JN,C04Q3JTT3,C04TU9UTW',\n  });\n}\n\nasync function sendSlackWebhookMessageAsync(opts) {\n  var s = new slackNode();\n  s.setWebhook(config.slack.webhookUrl);\n  var defaults = {\n    channel: '#random',\n    username: 'exp.host',\n    text: 'Test ' + Date.now(),\n    icon_emoji: ':robot:',\n  };\n  opts = _.assign(defaults, opts);\n  return s.promise.webhook(opts);\n};\n\n\nmodule.exports = {\n  sendSlackInstanceInviteAsync,\n  slackApiCallAsync,\n  sendSlackWebhookMessageAsync,\n};\n"],"sourceRoot":"/source/"}