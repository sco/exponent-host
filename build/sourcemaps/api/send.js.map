{"version":3,"sources":["api/send.js"],"names":[],"mappings":";;;;AAAA,IAAI,GAAG,GAAG,OAAO,CAAC,KAAK,CAAC,CAAC;AACzB,IAAI,YAAY,GAAG,OAAO,CAAC,cAAc,CAAC,CAAC;AAC3C,IAAI,QAAQ,GAAG,OAAO,CAAC,UAAU,CAAC,CAAC;AACnC,IAAI,MAAM,GAAG,OAAO,CAAC,QAAQ,CAAC,CAAC;;AAE/B,IAAI,QAAQ,GAAG,OAAO,CAAC,YAAY,CAAC,CAAC;AACrC,IAAI,MAAM,GAAG,OAAO,CAAC,WAAW,CAAC,CAAC;;AAElC,IAAI,YAAY,GAAG,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,UAAU,EAAE,MAAM,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC;;AAG7E,IAAI,6BAA6B,qBAAG,WAAgB,WAAW,EAAE,OAAO,EAAE;AACxE,SAAO,MAAM,YAAY,CAAC,OAAO,CAAC,WAAW,CAAC;AAC5C,MAAE,EAAE,WAAW;AACf,QAAI,EAAE,MAAM,CAAC,MAAM,CAAC,QAAQ;AAC5B,QAAI,EAAE,OAAO,EACd,CAAC,CAAC;CACJ,CAAA,CAAC;;AAEF,IAAI,cAAc,GAAG,QAAQ,CAAC,MAAM,CAAC,QAAQ,CAAC,QAAQ,EAAE,MAAM,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC;;AAElF,SAAS,eAAe,CAAC,GAAG,EAAE;AAC5B,MAAI,OAAO,GAAG,iBAAiB,CAAC;AAChC,SAAO,OAAO,GAAG,aAAa,GAAG,kBAAkB,CAAC,GAAG,CAAC,CAAC;CAC1D;;AAED,IAAI,uBAAuB,qBAAG,WAAgB,YAAY,EAAE,OAAO,EAAE;AACnE,SAAO,cAAc,CAAC,OAAO,CAAC,IAAI,CAAC;AACjC,MAAE,EAAE,YAAY;AAChB,QAAI,EAAE,iBAAiB;AACvB,WAAO,EAAE,OAAO,CAAC,OAAO;AACxB,QAAI,EAAE,OAAO,CAAC,IAAI;AAClB,QAAI,EAAE,OAAO,CAAC,IAAI,EACnB,CAAC,CAAA;CACH,CAAA,CAAC;;AAGF,MAAM,CAAC,OAAO,GAAG;AAChB,KAAG,EAAE,8CAA8C;AACnD,aAAW,oBAAE,WAAgB,GAAG,EAAE,IAAI,EAAE;;AAEtC,QAAI,YAAY,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC;AAC3B,QAAI,GAAG,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC;AAClB,QAAI,MAAM,CAAC;AACX,QAAI,YAAY,CAAC,KAAK,CAAC,GAAG,CAAC,EAAE;AAC3B,YAAM,GAAG,OAAO,CAAC;AACjB,aAAO,CAAC,GAAG,CAAC,iBAAiB,EAAE,GAAG,EAAE,MAAM,EAAE,YAAY,CAAC,CAAC;AAC1D,UAAI;AACF,YAAI,WAAW,GAAG,eAAe,CAAC,GAAG,CAAC,CAAC;AACvC,cAAM,uBAAuB,CAAC,YAAY,EAAE;AAC1C,iBAAO,EAAE,iBAAiB,GAAG,GAAG;AAChC,cAAI,EAAE,0BAA0B,GAAG,GAAG,CAAC,MAAM,CAAC,WAAW,CAAC,GAAG,IAAI,GAAG,GAAG,GAAG,MAAM;AAChF,cAAI,EAAE,iBAAiB,GAAG,WAAW,GAAG,IAAI,EAC7C,CAAC,CAAC;OACJ,CAAC,OAAO,CAAC,EAAE;AACV,cAAM,QAAQ,CAAC,mBAAmB,EAAE,GAAG,EAAE,yBAAyB,GAAG,CAAC,CAAC,OAAO,CAAC,CAAC;OACjF;KACF,MAAM;AACL,YAAM,GAAG,KAAK,CAAC;AACf,aAAO,CAAC,GAAG,CAAC,eAAe,EAAE,GAAG,EAAE,MAAM,EAAE,YAAY,CAAC,CAAC;AACxD,UAAI;AACF,cAAM,6BAA6B,CAAC,YAAY,EAAE,GAAG,CAAC,CAAC;OACxD,CAAC,OAAO,CAAC,EAAE;AACV,cAAM,QAAQ,CAAC,iBAAiB,EAAE,GAAG,EAAE,sBAAsB,GAAG,CAAC,CAAC,OAAO,CAAC,CAAC;OAC5E;KACF;AACD,WAAO,EAAC,IAAI,EAAE,IAAI,EAAE,GAAG,EAAE,IAAI,EAAE,MAAM,EAAN,MAAM,EAAE,SAAS,EAAE,YAAY,EAAC,CAAC;GACjE,CAAA,EACD,CAAC","file":"api/send.js","sourcesContent":["var ent = require('ent');\nvar instapromise = require('instapromise');\nvar sendgrid = require('sendgrid');\nvar twilio = require('twilio');\n\nvar ApiError = require('./ApiError');\nvar config = require('../config');\n\nvar twilioClient = twilio(config.twilio.accountSid, config.twilio.authToken);\n\n\nvar sendMessageToPhoneNumberAsync = async function (phoneNumber, message) {\n  return await twilioClient.promise.sendMessage({\n    to: phoneNumber,\n    from: config.twilio.callerId,\n    body: message,\n  });\n};\n\nvar sendgridClient = sendgrid(config.sendgrid.username, config.sendgrid.password);\n\nfunction httpRedirectUrl(url) {\n  var baseUrl = 'http://exp.host';\n  return baseUrl + '/--/to-exp/' + encodeURIComponent(url);\n}\n\nvar sendEmailToAddressAsync = async function (emailAddress, message) {\n  return sendgridClient.promise.send({\n    to: emailAddress,\n    from: 'notify@exp.host',\n    subject: message.subject,\n    text: message.text,\n    html: message.html,\n  })\n};\n\n\nmodule.exports = {\n doc: \"Sends an e-mail or SMS to the given argument\",\n methodAsync: async function (env, args) {\n   // TODO: Validate args\n   var emailOrPhone = args[0];\n   var url = args[1];\n   var medium;\n   if (emailOrPhone.match(/@/)) {\n     medium = 'email';\n     console.log(\"E-mailing link \", url, \" to \", emailOrPhone);\n     try {\n       var redirectUrl = httpRedirectUrl(url);\n       await sendEmailToAddressAsync(emailOrPhone, {\n         subject: \"Exponent Link: \" + url,\n         html: 'Exponent Link: <a href=\"' + ent.encode(redirectUrl) + '\">' + url + '</a>',\n         text: 'Exponent Link: ' + redirectUrl + \"\\n\",\n       });\n     } catch (e) {\n       throw ApiError('FAILED_SEND_EMAIL', env, \"Failed to send e-mail: \" + e.message);\n     }\n   } else {\n     medium = 'sms';\n     console.log(\"Texting link \", url, \" to \", emailOrPhone);\n     try {\n       await sendMessageToPhoneNumberAsync(emailOrPhone, url);\n     } catch (e) {\n       throw ApiError('FAILED_SEND_SMS', env, \"Failed to send SMS: \" + e.message);\n     }\n   }\n   return {sent: true, err: null, medium, recipient: emailOrPhone};\n },\n};\n"],"sourceRoot":"/source/"}