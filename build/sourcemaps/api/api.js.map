{"version":3,"sources":["api/api.js"],"names":[],"mappings":";;AAAA,IAAI,CAAC,GAAG,OAAO,CAAC,aAAa,CAAC,CAAC;;AAE/B,IAAI,QAAQ,GAAG,OAAO,CAAC,YAAY,CAAC,CAAC;AACrC,IAAI,GAAG,GAAG,OAAO,CAAC,QAAQ,CAAC,CAAC;;AAE5B,IAAI,GAAG,GAAG;AACR,MAAI,EAAE,OAAO,CAAC,QAAQ,CAAC;AACvB,SAAO,EAAE,OAAO,CAAC,WAAW,CAAC;AAC7B,aAAW,EAAE,OAAO,CAAC,eAAe,CAAC;AACrC,SAAO,EAAE,OAAO,CAAC,WAAW,CAAC;AAC7B,QAAM,EAAE,OAAO,CAAC,UAAU,CAAC;AAC3B,YAAU,EAAE,OAAO,CAAC,cAAc,CAAC,EACpC,CAAC;;AAEF,IAAI,UAAU,GAAG,UAAb,UAAU,CAAa,IAAI,EAAE;AAC/B,MAAI,MAAM,GAAG,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;AACrC,MAAI,QAAQ,GAAG,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC;AACpC,MAAI,AAAC,CAAC,QAAQ,IAAM,QAAQ,IAAI,MAAM,AAAC,IAAK,QAAQ,IAAI,KAAK,AAAC,EAAE;AAC9D,QAAI,CAAC,IAAI,GAAG,EAAC,IAAI,EAAE,MAAM,CAAC,GAAG,IAAI,8BAA8B,EAAC,CAAC;GAClE,MAAM;AACL,QAAI,MAAM,GAAG,IAAI,CAAC;AAClB,QAAI;AACF,UAAI,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC;KACjC,CAAC,OAAO,CAAC,EAAE;AACV,YAAM,GAAG,KAAK,CAAC;AACf,UAAI,CAAC,IAAI,GAAG,EAAC,GAAG,EAAE,qCAAqC,GAAG,CAAC,EAAC,CAAA;KAC7D;;AAED,QAAI,MAAM,EAAE;AACV,UAAI,GAAG,GAAG;AACR,YAAI,EAAJ,IAAI;AACJ,cAAM,EAAN,MAAM;AACN,kBAAU,EAAE,IAAI,CAAC,MAAM,CAAC,MAAM;AAC9B,UAAE,EAAE,IAAI,CAAC,OAAO,CAAC,EAAE;AACnB,gBAAQ,EAAE,IAAI,CAAC,OAAO,EAEvB,CAAC;AACF,UAAI;AACF,YAAI,MAAM,GAAG,MAAM,MAAM,CAAC,WAAW,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC;AACjD,YAAI,CAAC,CAAC,CAAC,QAAQ,CAAC,MAAM,CAAC,EAAE;AACvB,gBAAM,GAAG,EAAC,MAAM,EAAE,MAAM,EAAC,CAAC;SAC3B;AACD,cAAM,CAAC,GAAG,GAAG,IAAI,CAAC;AAClB,YAAI,CAAC,IAAI,GAAG,MAAM,CAAC;OACpB,CAAC,OAAO,CAAC,EAAE;AACV,YAAI,QAAQ,CAAC,UAAU,CAAC,CAAC,CAAC,EAAE;AAC1B,aAAG,CAAC,KAAK,CAAC,YAAY,EAAE,CAAC,CAAC,CAAC;AAC3B,cAAI,CAAC,IAAI,GAAG,EAAC,GAAG,EAAE,EAAE,GAAG,CAAC,CAAC,OAAO,GAAG,GAAG,EAAE,WAAW,EAAE,IAAI,EAAE,IAAI,EAAE,CAAC,CAAC,IAAI,EAAE,CAAC;SAC3E,MAAM;AACL,aAAG,CAAC,KAAK,CAAC,eAAe,EAAE,CAAC,CAAC,CAAC;AAC9B,cAAI,CAAC,IAAI,GAAG,EAAC,GAAG,EAAE,EAAE,GAAG,CAAC,CAAC,OAAO,GAAG,GAAG,EAAE,QAAQ,EAAE,KAAK,EAAE,IAAI,EAAE,cAAc,EAAE,CAAC;SACjF;OACF;KACF;GACF;CACF,CAAC;;AAEF,MAAM,CAAC,OAAO,GAAG;AACf,KAAG,EAAH,GAAG;AACH,YAAU,EAAV,UAAU,EACX,CAAC","file":"api/api.js","sourcesContent":["var _ = require('lodash-node');\n\nvar ApiError = require('./ApiError');\nvar log = require('../log');\n\nvar Api = {\n  send: require('./send'),\n  adduser: require('./adduser'),\n  recordEmail: require('./recordEmail'),\n  publish: require('./publish'),\n  whoami: require('./whoami'),\n  shortenUrl: require('./shortenUrl'),\n};\n\nvar callMethod = function*(next) {\n  var method = Api[this.params.method];\n  var jsonArgs = this.params.jsonArgs;\n  if ((!jsonArgs) || (jsonArgs == 'help') || (jsonArgs == 'doc')) {\n    this.body = {help: method.doc || \"[No documentation available]\"};\n  } else {\n    var argsOk = true;\n    try {\n      var args = JSON.parse(jsonArgs);\n    } catch (e) {\n      argsOk = false;\n      this.body = {err: \"Problem with JSON arguments Error: \" + e}\n    }\n\n    if (argsOk) {\n      var env = {\n        args,\n        method,\n        methodName: this.params.method,\n        ip: this.request.ip,\n        _request: this.request,\n        // TODO: Add in other environment stuff here\n      };\n      try {\n        var result = yield method.methodAsync(env, args);\n        if (!_.isObject(result)) {\n          result = {result: result};\n        }\n        result.err = null;\n        this.body = result;\n      } catch (e) {\n        if (ApiError.isApiError(e)) {\n          log.error(\"API Error:\", e);\n          this.body = {err: '' + e.message + '.', _isApiError: true, code: e.code,};\n        } else {\n          log.error(\"Server Error:\", e);\n          this.body = {err: '' + e.message + '.', apiError: false, code: 'SERVER_ERROR',};\n        }\n      }\n    }\n  }\n};\n\nmodule.exports = {\n  Api,\n  callMethod,\n};\n"],"sourceRoot":"/source/"}