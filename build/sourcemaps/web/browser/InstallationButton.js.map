{"version":3,"sources":["web/browser/InstallationButton.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;iCAAyB,sBAAsB;;qBAC7B,OAAO;;;;8BAGlB,iBAAiB;;AAExB,MAAM,YAAY,GAAG,+DAA+D,CAAC;AACrF,MAAM,eAAe,GAAG,gDAAgD,CAAC;;;;IAGpD,kBAAkB;WAAlB,kBAAkB;0BAAlB,kBAAkB;;;;;;;YAAlB,kBAAkB;;wBAAlB,kBAAkB;;WAC/B,kBAAG;AACP,aACE;wBAVJ,MAAM;qBAUU,IAAI,CAAC,KAAK,IAAE,OAAO,EAAC,SAAS,EAAC,OAAO,EAAE,IAAI,CAAC,YAAY,AAAC;;OAE5D,CACT;KACH;;;oCAjBM,QAAQ;WAoBH,wBAAG;AACb,UAAI,GAAG,GAAG,eAAe,GAAG,kBAAkB,CAAC,YAAY,CAAC,CAAC;AAC7D,YAAM,CAAC,QAAQ,GAAG,GAAG,CAAC;KACvB;;;SAbkB,kBAAkB;GAAS,mBAAM,SAAS;;qBAA1C,kBAAkB","file":"web/browser/InstallationButton.js","sourcesContent":["import { autobind } from '@ide/core-decorators';\nimport React from 'react';\nimport {\n  Button,\n} from 'react-bootstrap';\n\nconst MANIFEST_URL = 'https://www.dropbox.com/s/wjr7trh1zg12s6b/manifest.plist?dl=1';\nconst ITUNES_BASE_URL = 'itms-services://?action=download-manifest&url=';\n\n// TODO: Do an OS version check in componentDidMount\nexport default class InstallationButton extends React.Component {\n  render() {\n    return (\n      <Button {...this.props} bsStyle=\"primary\" onClick={this._downloadApp}>\n        Install Now\n      </Button>\n    );\n  }\n\n  @autobind\n  _downloadApp() {\n    let url = ITUNES_BASE_URL + encodeURIComponent(MANIFEST_URL);\n    window.location = url;\n  }\n}\n"],"sourceRoot":"/source/"}