{"version":3,"sources":["dropbox.js"],"names":[],"mappings":"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","file":"dropbox.js","sourcesContent":["var _ = require('lodash-node');\nvar dropbox = require('dropbox');\nvar instapromise = require('instapromise');\nvar path = require('path');\nvar secret = require('@exponent/secret');\n\nvar webhook = function *(next) {\n  this.type = 'text/plain';\n  this.body = this.query.challenge;\n};\n\nfunction dropboxClient(opts) {\n\n  // Clients may be stateful so we'll return a new one each time\n  // (at least for now). Remember that a Node server doesn't\n  // have a fresh context for each request!\n\n  var o = _.assign({\n    key: secret.dropbox.appKey,\n    secret: secret.dropbox.appSecret,\n  }, opts);\n\n  return new dropbox.Client(o);\n\n}\n\nasync function initProjectAsync(dc, projectName, opts) {\n  opts = opts || {};\n  dc = dc || dropboxClient({token: secret.dropbox._ccheeverTestAccessToken});\n\n  // TODO: Verify that the name works; figure out a good name for the directory\n  // For now, we'll just gloss over this\n\n  var result = await dc.promise.mkdir(projectName);\n  var pkgJson = _.assign({\n    name: projectName,\n    version: '1.0.0',\n    description: 'Exponent project',\n    main: 'index.js',\n    scripts: {\n      test: \"echo \\\"Error: no test specified\\\" && exit 1\"\n    },\n  }, opts);\n\n\n  await Promise.all([\n    dc.promise.writeFile(projectName + '/package.json', JSON.stringify(pkgJson)),\n    fs.promise.readFile(path.join(__dirname, '..', 'projectTemplate', 'index.js')).then((contents) => {\n      dc.promise.writeFile(projectName + '/index.js', contents);\n    }),\n  ]);\n\n  return true;\n\n}\n\n\n\n\nvar readline = require(\"readline\");\nvar simpleDriver = {\n  authType: function() { return \"code\"; },\n  url: function() { return \"\"; },\n  doAuthorize: function(authUrl, stateParm, client, callback) {\n    var intf = readline.createInterface({\n      input: process.stdin,\n      output: process.stdout\n    });\n    intf.write(\"Open the URL below in a browser and paste the \" +\n        \"provided authentication code.\\n\" + authUrl + \"\\n\");\n    intf.question(\"> \", function(authCode) {\n      intf.close();\n      callback({code: authCode});\n    });\n  }\n};\n\nfunction testClient() {\n  var client = dropboxClient();\n  client.authDriver(simpleDriver);\n  return client;\n}\n\n\n\nmodule.exports = {\n  dropboxClient,\n  initProjectAsync,\n  testClient,\n  webhook,\n};\n"],"sourceRoot":"/source/"}